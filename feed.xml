<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">

    <channel>
        <title>WildFly Elytron</title>
        <link>https://wildfly-security.github.io/wildfly-elytron</link>
        <description>WildFly Elytron: Security, Authentication, and Authorization SPIs for the WildFly project</description>
        <lastBuildDate>Tue, 12 Jan 2021 15:59:23 +0000</lastBuildDate>
        
        <item>
            <title>Automatic Self-Signed Certificate Generation with Elytron</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/auto-self-signed-certificate-generation/
            </link>
            <description>
                WildFly 22 adds the ability to automatically generate a self-signed certificate the first time WildFly receives an HTTPS request when WildFly is being secured using Elytron. This is useful for development or testing environments. This blog post gives an introduction to this new feature. Default SSL context Making use of...
            </description>
            <pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/auto-self-signed-certificate-generation/
            </guid>
        </item>
        
        <item>
            <title>TLS 1.3 support for WildFly with OpenSSL</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/tls-13-with-wildfly-openssl/
            </link>
            <description>
                WildFly 21 adds the ability to use TLS 1.3 with WildFly when using the OpenSSL TLS provider. This blog post will give an introduction to this new feature. Disabled by Default The use of TLS 1.3 is currently disabled by default when using the OpenSSL TLS provider. This is because...
            </description>
            <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/tls-13-with-wildfly-openssl/
            </guid>
        </item>
        
        <item>
            <title>SSH Authentication with Git Persistence</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/ssh-auth-for-git-persistence/
            </link>
            <description>
                When using a standalone WildFly server, it is currently possible to manage your configuration file history using a git repository. While previously it was only possible to connect to HTTP git servers, it is now possible to establish a connection with SSH servers as well. In order to connect to...
            </description>
            <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/ssh-auth-for-git-persistence/
            </guid>
        </item>
        
        <item>
            <title>RESTEasy client integration with WildFly Elytron client</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/resteasy-elytron-client-integration/
            </link>
            <description>
                We have added a new functionality to the RESTEasy client that allows it to use authentication configuration from WildFly Elytron client. It is now possible to configure bearer token, SSL context and credentials in Elytron client that RESTEasy client will automatically use when making requests. Elytron client configuration No new...
            </description>
            <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/resteasy-elytron-client-integration/
            </guid>
        </item>
        
        <item>
            <title>New Security Features in WildFly 21</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/new-security-features-in-wildfly-21/
            </link>
            <description>
                This blog post highlights the new security features that are in WildFly 21. Security Realm Enhancements If a security realm becomes unavailable for some reason, it is now possible to fail over to an alternate security realm. WildFly 21 also adds support for distributed security realms, where identities can be...
            </description>
            <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/new-security-features-in-wildfly-21/
            </guid>
        </item>
        
        <item>
            <title>HTTP External Mechanism</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/http-external-mechanism/
            </link>
            <description>
                WildFly Elytron now supports authenticating users with the External HTTP mechanism. The External mechanism allows users to be authenticated with credentials established outside the server via the AJP protocol. This means if you have users authenticated by an Apache httpd server, these users can be forwarded to WildFly. This can...
            </description>
            <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/http-external-mechanism/
            </guid>
        </item>
        
        <item>
            <title>An overview of new security realm implementations</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/distributed-and-failover-realms/
            </link>
            <description>
                We have added a new functionality to WildFly Elytron It is now possible to configure security realms that delegate authentication and authorization to multiple realms. Distributed realm First added realm is the distributed-realm, which can be used to join multiple realms into one, for example if you have user data...
            </description>
            <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/distributed-and-failover-realms/
            </guid>
        </item>
        
        <item>
            <title>Anomaly based Intrusion Detection System</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/anomaly-based-intrusion-detection-system/
            </link>
            <description>
                Intrusion Detection is the art of sensing when a system or network is being used inappropriately or without authorization. Without intrusion detection, an attacker can attempt attacks many times until an attack is finally successful. Intrusion detection allows for these attacks to be identified before a successful attack is likely...
            </description>
            <pubDate>Sat, 29 Aug 2020 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/anomaly-based-intrusion-detection-system/
            </guid>
        </item>
        
        <item>
            <title>Introduction to Rule Engine & Blacklist IP Dump of Intrusion Detection System</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/introduction-rule-engine-and-blacklist-dump/
            </link>
            <description>
                Earlier we introduced Intrusion Detection System using Elytron&#8217;s security events and discussed its architecture. In this blog we&#8217;ll discuss the implementation of Rule Engine &amp; Blacklist IP Dump. Rule Engine Rule Engine comprises of a set of pre-defined rules, which are used to score the event on a scale of...
            </description>
            <pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/introduction-rule-engine-and-blacklist-dump/
            </guid>
        </item>
        
        <item>
            <title>An Introduction to Intrusion Detection System using Elytron</title>
            <link>
                https://wildfly-security.github.io/wildfly-elytron/blog/architectural-overview-intrusion-detection-system/
            </link>
            <description>
                Intrusion Detection is the art of sensing when a system or network is being used inappropriately or without authorization. Without intrusion detection, an attacker can attempt attacks many times until an attack is finally successful. Intrusion detection allows for these attacks to be identified before a successful attack is likely...
            </description>
            <pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate>
            <guid>
                https://wildfly-security.github.io/wildfly-elytron/blog/architectural-overview-intrusion-detection-system/
            </guid>
        </item>
        
    </channel>
</rss>
